{"version":3,"sources":["pages/home/contents.tsx","components/listView.tsx","pages/home/index.tsx","api/index.tsx","components/publicHeader.tsx"],"names":["tabBarTtems","title","key","picUrl","selectUrl","List","props","history","useHistory","useState","refreshing","setRefreshing","data","setData","init","a","getHomeData","param","useEffect","goDetailPage","push","damping","style","height","document","documentElement","clientHeight","overflow","distanceToRefresh","getScrollContainer","indicator","direction","onRefresh","setTimeout","map","i","size","onClick","Header","current_node","extra","flow_name","Body","name","Footer","content","start_handler","time","id","Home","timer","selectedTab","setSelectedTab","setTitle","weather","setWeather","position","setPosition","get_weather","window","sessionStorage","getItem","location","JSON","parse","city","getWeather","lng","lat","now","marqueeProps","loop","padding","obsTime","moment","format","text","temp","feelsLike","unselectedTintColor","tintColor","barTintColor","hidden","tabBarPosition","prerenderingSiblingsNumber","item","Item","icon","width","background","selectedIcon","selected","onPress","axios","defaults","timeout","num","interceptors","request","use","config","loading","err","hide","Promise","reject","response","res","info","params","get","getGeographyIP","url","console","log","length","get3Weather","PublicHeader","mode","type","onLeftClick","goBack","rightContent","marginRight"],"mappings":"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","file":"static/js/7.cdef2a6e.chunk.js","sourcesContent":["import moment from 'moment';\r\nconst tabBarTtems = [\r\n    {\r\n        title: '待审批',\r\n        key: 'todo',\r\n        picUrl: 'https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg',\r\n        selectUrl:'https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg',\r\n    },\r\n    {\r\n        title: '我发起',\r\n        key: 'category',\r\n        picUrl: 'https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg',\r\n        selectUrl:'https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg',\r\n    },\r\n    {\r\n        title: '已审批',\r\n        key: 'cart',\r\n        picUrl: 'https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg',\r\n        selectUrl:'https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg',\r\n    },\r\n    {\r\n        title: '已抄送',\r\n        key: 'concemed',\r\n        picUrl: 'https://zos.alipayobjects.com/rmsportal/asJMfBrNqpMMlVpeInPQ.svg',\r\n        selectUrl:'https://zos.alipayobjects.com/rmsportal/gjpzzcrPMkhfEqgbYvmN.svg',\r\n    },\r\n]\r\n\r\nconst time = (timer:string):string => {\r\n    return moment(timer).format('YYYY年MM月DD日')\r\n}\r\n\r\n\r\nexport { tabBarTtems, time }","import React, { useState, useEffect } from 'react'\r\nimport { PullToRefresh, Card, WingBlank, WhiteSpace } from 'antd-mobile'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getHomeData } from '../api'\r\n\r\ninterface Params {\r\n\tparam: string\r\n}\r\ninterface DataType {\r\n\t[key: string]: string\r\n}\r\n\r\nconst List: React.FC<Params> = (props) => {\r\n    const history = useHistory();\r\n\tconst [refreshing, setRefreshing] = useState(false)\r\n\tconst [data, setData] = useState<DataType[]>([])\r\n\r\n\tconst init = async () => {\r\n\t\tlet data = await getHomeData(props.param)\r\n\t\tsetData(data.data)\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tinit()\r\n\t}, [])\r\n\r\n    const goDetailPage = () => {\r\n        history.push('/detilPage')\r\n    }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<PullToRefresh\r\n\t\t\t\tdamping={60}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: document.documentElement.clientHeight - 131,\r\n\t\t\t\t\toverflow: 'auto',\r\n\t\t\t\t}}\r\n\t\t\t\tdistanceToRefresh={25}\r\n\t\t\t\tgetScrollContainer={() => undefined}\r\n\t\t\t\tindicator={{}}\r\n\t\t\t\tdirection=\"up\"\r\n\t\t\t\trefreshing={refreshing}\r\n\t\t\t\tonRefresh={() => {\r\n\t\t\t\t\tsetRefreshing(true)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetRefreshing(false)\r\n\t\t\t\t\t}, 1000)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{data.map((i) => (\r\n\t\t\t\t\t<WingBlank size=\"lg\" key={i.id}>\r\n\t\t\t\t\t\t<WhiteSpace size=\"lg\" />\r\n\t\t\t\t\t\t<Card onClick={goDetailPage}>\r\n\t\t\t\t\t\t\t<Card.Header\r\n\t\t\t\t\t\t\t\ttitle={i.current_node}\r\n\t\t\t\t\t\t\t\textra={i.flow_name}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t{i.name}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<Card.Footer\r\n\t\t\t\t\t\t\t\tcontent={i.start_handler}\r\n\t\t\t\t\t\t\t\textra={i.time}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t<WhiteSpace size=\"lg\" />\r\n\t\t\t\t\t</WingBlank>\r\n\t\t\t\t))}\r\n\t\t\t</PullToRefresh>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default List\r\n","import React, { useState, useEffect } from 'react'\r\nimport { TabBar, NoticeBar } from 'antd-mobile'\r\nimport PublicHeader from '../../components/publicHeader'\r\nimport { tabBarTtems, time } from './contents'\r\nimport List from '../../components/listView'\r\nimport { getWeather } from '../../api'\r\n\r\ninterface weatherObj {\r\n\t[key: string]: string\r\n}\r\n\r\nconst Home: React.FC = () => {\r\n\tconst [selectedTab, setSelectedTab] = useState('todo')\r\n\tconst [title, setTitle] = useState('待审批流程')\r\n\tconst [weather, setWeather] = useState<weatherObj>({})\r\n\tconst [position, setPosition] = useState('暂时无法获取位置信息')\r\n    const selected = (key: string, title: string): void => {\r\n        setTitle(title + '流程')\r\n        setSelectedTab(key)\r\n    }\r\n    const get_weather = async() => {\r\n        let position = window.sessionStorage.getItem('position')\r\n        if (!position) {\r\n            return\r\n        }\r\n        const location = JSON.parse(position)\r\n        setPosition(location.city)\r\n        let data = await getWeather(location.lng + ',' + location.lat)\r\n        setWeather(data.data.now)\r\n    }\r\n    useEffect(() => {\r\n        get_weather()\r\n    }, [])\r\n    \r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<PublicHeader title={title} />\r\n            <NoticeBar marqueeProps={{ loop: true, style: { padding: '0 7.5px' } }}>\r\n                {time(weather.obsTime)}，{position}，天气：{weather.text}，温度：{weather.temp}°，体感温度：{weather.feelsLike}°\r\n            </NoticeBar>\r\n\t\t\t<TabBar\r\n\t\t\t\tunselectedTintColor=\"#949494\"\r\n\t\t\t\ttintColor=\"#33A3F4\"\r\n\t\t\t\tbarTintColor=\"white\"\r\n\t\t\t\thidden={false}\r\n\t\t\t\ttabBarPosition=\"top\"\r\n                prerenderingSiblingsNumber={0}\r\n\t\t\t>\r\n\t\t\t\t{tabBarTtems.map((item) => (\r\n\t\t\t\t\t<TabBar.Item\r\n\t\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\t\tkey={item.key}\r\n                        icon={<div style={{width: '22px', height: '22px', background: `url(${item.picUrl}) center center /  21px 21px no-repeat`}}/>}\r\n                        selectedIcon={<div style={{width: '22px', height: '22px', background: `url(${item.selectUrl}) center center /  21px 21px no-repeat`}}/>}\r\n                        selected={selectedTab === item.key}\r\n                        onPress={() => {selected(item.key, item.title)}}\r\n\t\t\t\t\t>\r\n                        <List param={item.key}/>\r\n                    </TabBar.Item>\r\n\t\t\t\t))}\r\n\t\t\t</TabBar>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home\r\n","import axios from 'axios'\r\nimport { Toast } from 'antd-mobile'\r\n// axios.defaults.baseURL = '/api';\r\naxios.defaults.timeout = 5000\r\nlet num = 0\r\nconst key = '00e4a28d1a1b4432a3e3769ce70afa0e'\r\n// 请求前拦截\r\naxios.interceptors.request.use(\r\n\t(config) => {\r\n        num++\r\n\t\tToast.loading('拼命加载中，请稍后~', 0)\r\n\t\treturn config\r\n\t},\r\n\t(err) => {\r\n        num = 0\r\n\t\tToast.hide()\r\n\t\treturn Promise.reject(err)\r\n\t}\r\n)\r\n// 返回后拦截\r\naxios.interceptors.response.use(\r\n\t(res) => {\r\n        num--\r\n        if (num === 0) {\r\n            Toast.hide()\r\n        }\r\n\t\treturn res\r\n\t},\r\n\t(err) => {\r\n        num = 0\r\n\t\tToast.hide()\r\n        Toast.info('服务器错误请稍后重试~', 2);\r\n\t\treturn Promise.reject(err)\r\n\t}\r\n)\r\n\r\n// 获取首页信息\r\nconst getHomeData = (params: any) => axios.get('https://5e528b14d90e6c00149913cf.mockapi.io/api/data?type=' + params)\r\n// 获取天气信息\r\nconst getWeather = (params: string) => axios.get(`https://devapi.qweather.com/v7/weather/now?location=${params}&key=${key}`)\r\n// 获取地理编码\r\nconst getGeographyIP = (params: string | any[]) => {\r\n    let url = 'https://geoapi.qweather.com/v2/city/lookup?location='\r\n    console.log(params);\r\n    \r\n    if (params.length === 2) {\r\n        url = url + params[1] + '&admin=' + params[0] + `&key=${key}`\r\n    } else {\r\n        url = url + params[2] + '&admin=' + params[1] + '&admin=' + params[0] + `&key=${key}`\r\n    }\r\n    console.log(url);\r\n    \r\n    return axios.get(url)\r\n}\r\n// 获取三天天气情况\r\nconst get3Weather = (params: string) => axios.get(`https://devapi.qweather.com/v7/weather/3d?location=${params}&key=${key}`)\r\nexport { getHomeData, getWeather, getGeographyIP, get3Weather }\r\n","import React from 'react'\r\nimport { NavBar, Icon } from 'antd-mobile'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface params {\r\n\ttitle: string\r\n}\r\n\r\nconst PublicHeader: React.FC<params> = (props) => {\r\n\tconst { title } = props\r\n    const history = useHistory()\r\n\treturn (\r\n\t\t<NavBar\r\n\t\t\tmode=\"dark\"\r\n\t\t\ticon={<Icon type=\"left\" />}\r\n\t\t\tonLeftClick={() => history.goBack()}\r\n\t\t\trightContent={[\r\n\t\t\t\t<Icon key=\"0\" type=\"search\" style={{ marginRight: '16px' }} />,\r\n\t\t\t]}\r\n\t\t>\r\n\t\t\t{title}\r\n\t\t</NavBar>\r\n\t)\r\n}\r\nexport default PublicHeader\r\n"],"sourceRoot":""}